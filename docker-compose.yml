#version: "3.9"
name: mern-app-stack

services:
  # =============== Database ===============
  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongo-data:/data/db
    networks:
      - app-net

  # ======= Database UI (Mongo Express) =======
  mongo-express:
    image: mongo-express:1.0.2-20
    container_name: mongo-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://root:${MONGO_INITDB_ROOT_PASSWORD}@mongo-service:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH=true
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_PASSWORD}
      - PORT=8081
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - app-net

  # =============== API (Express) ===============
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    networks:
      - app-net

  # =============== Client (React) ===============
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - app-net

  # Nginx
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx:1.19.1-alpine
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./nginx/ssl/localhost.key:/etc/ssl/private/localhost.key
    depends_on:
      - mongo-express
      - client
      - api
    networks:
      - app-net


networks:
  app-net:

volumes:
  mongo-data:
