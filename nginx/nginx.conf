events {}

http {
  server_tokens off;
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;

  upstream client_upstream {
    server client:3000;
    keepalive 32;
  }

  upstream api_upstream {
    server api:5000;
    keepalive 32;
  }

  upstream me_upstream {
    server mongo-express:8081;
    keepalive 8;
  }

  # HTTP -> HTTPS
  server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # HTTPS
  server {
    listen 443 ssl http2;
    server_name _;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # --- Client (React) at "/" ---
    location / {
      proxy_pass http://client_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # --- API at "/api" ---
    location /api/ {
      proxy_pass http://api_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Mongo Express at "/mongo-express" ---
    location /mongo-express/ {
      proxy_pass http://me_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Support sub-path (rewrite asset URLs)
      sub_filter_once off;
      sub_filter 'href="/'  'href="/mongo-express/';
      sub_filter 'src="/'   'src="/mongo-express/';
    }
  }
}
